@startuml class_env

enum SpaceTypes {
    DISCRETE
    CONTINUOUS
    GRAY_2ch
    GRAY_3ch
    COLOR
    IMAGE
    TEXT
    MULTI
}

abstract SpaceBase {
    stype : SpaceTypes
    encode_to_int()
    decode_from_int()
    encode_to_list_int()
    decode_from_list_int()
    encode_to_list_float()
    decode_from_list_float()
    encode_to_np()
    decode_from_np()
}
note as SpaceMemo
- DiscreteSpace
- ArrayDiscreteSpace
- ContinuousSpace
- ArrayContinuousSpace
- BoxSpace
end note
SpaceBase <|-- SpaceMemo

SpaceBase .. SpaceTypes

abstract EnvBase {
    action_space : SpaceBase
    observation_space : SpaceBase
    player_num : int
    next_player_index: int
    reset()
    step(action)
    render_terminal()
    render_rgb_array()
} 

EnvBase .. SpaceBase

abstract gymnasium.Env {}
abstract gym.Env {}
class GymnasiumWrapper {}
class GymWrapper {}

GymnasiumWrapper o-- gymnasium.Env
GymWrapper o-- gym.Env
EnvBase -- GymnasiumWrapper
EnvBase -- GymWrapper


class EnvRun {
    config : EnvConfig
    env : EnvBase
    reset(render_mode, seed)
    step(action)
    render()
}
EnvRun -- EnvBase

note "Keeps run-time state." as EnvRunMemo
EnvRun . EnvRunMemo


class EnvConfig {
    name : str
    kwargs : dict
}
EnvRun -- EnvConfig


@enduml