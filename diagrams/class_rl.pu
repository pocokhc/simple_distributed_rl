@startuml class_rl

enum RLBaseActTypes {
    NONE
    DISCRETE
    CONTINUOUS
}

enum RLBaseObsTypes {
    NONE
    DISCRETE
    BOX
}

abstract RLConfig {
    .. abstract ..
    get_name() : str
    get_base_action_type() : RLBaseActTypes
    get_base_observation_type() : RLBaseObsTypes
    .. Runtime properties ..
    action_space : SpaceBase
    observation_space : SpaceBase
    Other user params
    .. utils ..
    state_encode(env_state) : rl_state
    action_decode(rl_action) : env_action
}


abstract RLMemory {
    config : RLConfig
    register_worker_func(func, serialize_func)
    register_trainer_recv_func(func)
    register_trainer_send_func(func)
    backup()
    restore()
}


abstract RLParameter {
    config : RLConfig
    restore()
    backup()
    Other user functions()
}


abstract RLTrainer {
    config : RLConfig
    parameter : RLParameter
    memory : RLMemory
    on_setup()
    on_teardown()
    train()
}


abstract RLWorker {
    config : RLConfig
    parameter : RLParameter
    memory : RLMemory
    on_setup()
    on_teardown()
    on_reset()
    policy() : action
    on_step()
    render_terminal()
    render_rgb_array()
}
RLWorker -- WorkerRun


class RunContext {}
class WorkerRun {
    env : EnvRun
    worker : RLWorker
    setup(context)
    teardown()
    reset(player_index)
    policy() : action
    on_step()
    render()

}
note "Keeps run-time state.\nAbsorbs the difference with the environment." as WorkerRunMemo
WorkerRun . WorkerRunMemo
RunContext . WorkerRun

RLBaseActTypes . RLConfig
RLBaseObsTypes . RLConfig

RLConfig --- RLWorker
RLConfig --- RLTrainer
RLConfig -- RLParameter
RLConfig -- RLMemory

RLParameter -- RLWorker
RLParameter -- RLTrainer
RLMemory -- RLWorker
RLMemory -- RLTrainer

@enduml