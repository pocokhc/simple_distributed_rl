@startuml playflow2
autoactivate on

actor User

participant EnvRun
participant EnvBase

participant WorkerRun
participant Worker

participant Trainer
participant Parameter
participant Memory


activate User

group Reset Phase
    User -> EnvRun: reset(seed)
        EnvRun -> EnvBase: reset(seed)
        return state
    return

    User -> WorkerRun: reset(player_index, seed)
        WorkerRun -> Worker: on_reset()
        return
    return
end

loop episode
    User -> EnvRun: render()
        EnvRun -> EnvBase: rendering
        return
    return

    User -> WorkerRun: policy()
        note right
        worker_idx = env.next_player
        state = <color blue>encode(env.state)</color>
        end note

        alt 1st step
            WorkerRun -> Worker: on_reset(WorkerRun)
            return
        else After the 2nd step
            WorkerRun -> Worker: on_step(WorkerRun)
                Worker -> Memory: add(batch)
                return
            return
        end

        WorkerRun -> Worker: policy(WorkerRun)
            Worker -> Parameter: get parameter
            return
        return action

        note left
        action = <color red>decode(action)</color>
        end note

        WorkerRun -> Worker: render()
        return

    return action

    User -> EnvRun: step(action)
        EnvRun -> EnvBase: step(action)
        return state, rewards, terminated, truncated
    return

    User -> WorkerRun: on_step()
        note right
        save step reward
        end note
        alt done
            WorkerRun -> Worker: on_step(WorkerRun)
            return
        end
    return

    User -> Trainer: train
        Trainer -> Memory: sample()
        return batches
        Trainer -> Parameter: update parameter
        return
    return

end

User -> EnvRun: render()
    EnvRun -> EnvBase: rendering
    return
return

deactivate User

@enduml