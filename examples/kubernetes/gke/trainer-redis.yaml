# --- Redis internal service
apiVersion: v1
kind: Service
metadata:
  name: redis-internal-service
spec:
  type: ClusterIP
  selector:
    app: trainer
  ports:
  - name: redis-internal-port
    protocol: TCP
    port: 6379
    targetPort: 6379

# --- Redis config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |-
    bind 0.0.0.0
    port 6379

---
apiVersion: v1
kind: Pod
metadata:
  name: trainer-pod
  labels:
    app: trainer
spec:
  nodeSelector:
    cloud.google.com/gke-accelerator: "nvidia-tesla-t4"
    cloud.google.com/gke-spot: "true"  # option
  containers:
    # --- Trainer ---
    - name: trainer-node
      #image: nvidia/cuda:11.0.3-runtime-ubuntu20.04
      image: {YOUR IMAGE}
      #command: ["sh", "-c", "while true; do sleep 3600; done"]
      command: ["python", "-u", "/code/server_trainer.py"]
      resources:
        requests:
          cpu: 10m"
          memory: "3Gi"
          nvidia.com/gpu: "1"
        limits:
          cpu: "1"
          memory: "16Gi"
          nvidia.com/gpu: "1"

    # --- Redis ---
    - name: redis-server
      image: redis:7.2-alpine
      ports:
        - containerPort: 6379
      command: ["redis-server", "/etc/redis/redis.conf"]
      volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
      resources:
        requests:
          cpu: "10m"
          memory: "1Gi"
        limits:
          cpu: "1"
          memory: "4Gi"
      
    - name: redis-commander
      image: rediscommander/redis-commander:latest
      env: [{"name": "REDIS_HOSTS", "value": "local:localhost:6379"}]
      ports:
        - containerPort: 8081
      resources:
        requests:
          cpu: "10m"
          memory: "32Mi"
        limits:
          cpu: "200m"
          memory: "256Mi"

  volumes:
    - name: redis-config
      configMap:
        name: redis-config

